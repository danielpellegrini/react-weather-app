{"version":3,"sources":["components/utils.js","components/weather.js","App.js","reportWebVitals.js","index.js"],"names":["joinString","str","split","i","length","join","convertUnixTime","nr","Date","toLocaleTimeString","hour","minute","CardExampleCard","_ref","weatherData","cityData","react_default","a","createElement","className","locality","moment","format","Math","floor","main","temp","src","concat","weather","sys","sunset","sunrise","description","alt","toLowerCase","charAt","toUpperCase","slice","titleCase","temp_max","temp_min","humidity","App","_useState","useState","_useState2","Object","slicedToArray","lat","setLat","_useState3","_useState4","long","setLong","_useState5","_useState6","data","setData","_useState7","_useState8","city","setCity","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","process","language","then","res","json","result","console","log","stop","apply","this","arguments","fetchWeatherData","Dimmer","active","Loader","size","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.dc8fa68a.chunk.js","sourcesContent":["\nexport const titleCase = (str) =>  {\n    str = str.toLowerCase();\n    str = str.split(' ');\n    for(let i = 0; i < str.length; i++) {\n        str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n    }\n    return str.join(' ')\n}\n\nexport const joinString = (str) => {\n    str = str.split(' ');\n    for(let i = 0; i < str.length; i++) {\n        str[i] = str[i];\n    }\n    return str.join('-')\n}\n\nexport const convertUnixTime = (nr) => new Date(nr * 1000).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n\n\n","import React from 'react';\nimport './styles.css';\nimport moment from 'moment';\nimport { titleCase } from './utils.js';\nimport { joinString } from './utils';\nimport { convertUnixTime } from './utils';\n\nconst CardExampleCard = ({weatherData, cityData}) => (\n    <div className=\"main card text-bg-dark\" >\n        <div className='header'>\n            <div className='header-left'>\n                <div className='city'>\n                    <h1>{cityData.locality}</h1>\n                </div>\n                <div className='date'>\n                    <span className='text-uppercase'>{moment().format('ddd D MMM')}</span>\n                </div>\n                <div className='temperature'>\n                    <h1>{Math.floor(weatherData.main.temp)}&deg;</h1>\n                </div>\n            </div>\n            <div className='header-right'>\n                <div className='weather-icon'>\n                    <img src={(`../icons/animated/${weatherData.weather.main = 'Clouds' && weatherData.sys.sunset > weatherData.sys.sunrise ? 'cloudy-night' : joinString(weatherData.weather[0].description) }.svg`)} alt={weatherData.weather[0].description} />\n                </div>\n                <div className='description'>\n                    <p>{titleCase(weatherData.weather[0].description)}</p> \n                </div>\n                <div className='min-max-temperature'>\n                    <span>H: {Math.floor(weatherData.main.temp_max)}&deg; </span>\n                    <span>L: {Math.floor(weatherData.main.temp_min)}&deg;</span>\n                </div>\n                <div>\n                    <p>Humidity: {weatherData.main.humidity}%</p>    \n                </div>\n            </div>\n        </div> \n       \n        <div className='sun-position'>\n            <div className='sunrise'>\n                <img className='sunrise-sun' src={('../icons/animated/clear-sky.svg')} alt=\"\" />\n            </div>\n            <span>Sunrise: {convertUnixTime(weatherData.sys.sunrise)}</span>\n            <div className='sunset'>\n                <img className='sunset-moon' src={('../icons/animated/night.svg')} alt=\"\" />\n                <img className='sunset-sun' src={('../icons/animated/clear-sky.svg')} alt=\"\" />\n            </div>\n            <span>Sunset: {convertUnixTime(weatherData.sys.sunset)}</span>\n        </div>\n        \n    </div>\n    \n)\n\nexport default CardExampleCard;\n\n\n","    import './App.css';\n    import React, { useEffect, useLayoutEffect, useState } from \"react\";\n    import Weather from './components/weather.js';\n    import { Dimmer, Loader } from 'semantic-ui-react'\n    function App() {\n  \n      const [lat, setLat] = useState([]);\n      const [long, setLong] = useState([]);\n      const [data, setData] = useState([]);\n      const [city, setCity] = useState([]);\n\n      useEffect(() => {\n        const fetchWeatherData = async () => {\n          /* get latitude and longitude */\n          navigator.geolocation.getCurrentPosition(function(position) {\n            setLat(position.coords.latitude);\n            setLong(position.coords.longitude);\n          });\n          /* reverse geocoding and getting the exact city with bigdatacloud.com */\n          await fetch(`${process.env.REACT_APP_API_REVERSE_GEOCODING_URL}?latitude=${lat}&longitude=${long}&localityLanguage=${navigator.language.split('-')[0]}`)\n          .then(res => res.json())\n          .then(result => {\n            setCity(result)\n          })\n          /* get weather datas */\n          await fetch(`${process.env.REACT_APP_API_WEATHER_URL}/weather/?lat=${lat}&lon=${long}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`)\n          .then(res => res.json())\n          .then(result => {\n            setData(result)\n            console.log(result)\n          })\n        }\n        fetchWeatherData()\n      }, [lat,long])\n\n      return (\n      <div className=\"App\">\n        {/* since the fetch data is an async function, it's mandatory to include this check */}\n        {(typeof data.main != 'undefined') ? \n          (<Weather weatherData={data} cityData={city}/>) : \n          (<div>\n            <Dimmer active>\n              <Loader size=\"big\">Loading...</Loader>\n            </Dimmer>\n          </div>)\n        }\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode> \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}